{
  "name": "Unified Platform - User Portal",
  "short_name": "User Portal",
  "description": "Your personal portal for accessing company services like support tickets, chat, and remote access.",
  "start_url": "/index.html?source=pwa",
  "display": "standalone",
  "background_color": "#ffffff",
  "theme_color": "#5e81ac",
  "orientation": "portrait-primary",
  "icons": [
    {
      "src": "/img/icons/user-192.png",
      "sizes": "192x192",
      "type": "image/png",
      "purpose": "any maskable"
    },
    {
      "src": "/img/icons/user-512.png",
      "sizes": "512x512",
      "type": "image/png",
      "purpose": "any maskable"
    }
  ]
}```

---
#### **۵. فایل `service-worker.js`**
*   **مسیر:** `user_portal_public/service-worker.js`

```javascript
// user_portal_public/service-worker.js
const CACHE_NAME = 'user-portal-cache-v1';
const urlsToCache = [
  '/',
  'index.html',
  'login.html',
  'style.css',
  'app.js',
  'https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css',
  'https://unpkg.com/lucide@latest/dist/lucide.js'
];

self.addEventListener('install', event => {
  self.skipWaiting();
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => {
      console.log('User Service Worker: Caching app shell');
      return cache.addAll(urlsToCache);
    })
  );
});

self.addEventListener('activate', event => {
    event.waitUntil(clients.claim());
});

self.addEventListener('fetch', event => {
  // We only cache GET requests
  if (event.request.method !== 'GET') {
    return;
  }
  
  // For API requests, use a network-first strategy
  if (event.request.url.includes('/api/')) {
    event.respondWith(
        fetch(event.request).catch(() => {
            return new Response(JSON.stringify({ error: "Offline. Could not fetch data." }), {
                headers: { 'Content-Type': 'application/json' }
            });
        })
    );
    return;
  }

  // For all other requests, use a cache-first strategy
  event.respondWith(
    caches.match(event.request).then(response => {
      return response || fetch(event.request);
    })
  );
});

self.addEventListener('push', event => {
  console.log('User Service Worker: Push Received.');
  const data = event.data.json();
  const title = data.title || 'Portal Notification';
  const options = {
    body: data.body,
    icon: '/img/icons/user-192.png'
  };
  event.waitUntil(self.registration.showNotification(title, options));
});
